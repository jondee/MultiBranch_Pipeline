node {
    
    //function for maven 
  
/*---------------------------------------------------------------------------------------------------------------------------------------*/    
    //stage one for git 
    stage ('stage-1 clone_git') {
       git branch: 'feature', credentialsId: '4b65e6f4-e888-491b-9800-abd06f32ad48', url: 'https://github.com/jondee/paypal-web-app-1.git'
       //git 'https://github.com/jondee/paypal-web-app-1.git'
    }   
/*---------------------------------------------------------------------------------------------------------------------------------------*/        
    //stage two  for maven 
    //Maven Home in Jenkins server  /var/lib/jenkins/tools/hudson.tasks.Maven_MavenInstallation/maven3.8.2/bin
    def mavenHome = tool name:'maven3.8.2'
    stage ('stage-2 Maven Build') {
           sh  " echo ${mavenHome} "
    sh  "${mavenHome}/bin/mvn clean package"
 
    }   
    
 /*---------------------------------------------------------------------------------------------------------------------------------------*/       
    
    //stage three  for code quality 
    //Maven Home in Jenkins server  /var/lib/jenkins/tools/hudson.tasks.Maven_MavenInstallation/maven3.8.4/bin
  
    stage ('stage-3 Code Quality') {
    sh  "${mavenHome}/bin/mvn clean package"
    } 
/*---------------------------------------------------------------------------------------------------------------------------------------*/    
    //stage four  for Deploy Artifactory
    //Maven Home in Jenkins server  /var/lib/jenkins/tools/hudson.tasks.Maven_MavenInstallation/maven3.8.4/bin
  
    stage ('stage-4 Upload Artifacts') {
    sh  "${mavenHome}/bin/mvn clean  deploy"
    } 

/*---------------------------------------------------------------------------------------------------------------------------------------*/
  
    stage ('stage-5 Deploy to Tomcat') {
    deploy adapters: [tomcat9(credentialsId: 'TomcatCred_pipeline', path: '', url: 'http://192.168.108.145:8080/')], contextPath: null, war: 'target/*war'
    } 

    stage ('stage-5b Deploy to Tomcat UAT environment  using SCP ') {
    
     
   // sshagent(['AGENT1_CREDENTIALS']) {
    // some block
    // StrictHostKeyChecking=no is for no manual stage to ask if we need to continue or not (no prompts)
   //  sh "scp -o StrictHostKeyChecking=no  target/*war ec2-user@192.168.108.145:/opt/tomcat9/webapps/uat.war"
  //   sh "scp target/*war ec2-user@192.168.108.145:/opt/tomcat9/webapps/uat.war"
    
   // sshagent(credentials: ['AGENT1_CREDENTIALS'], ignoreMissing: true) {
   //sh "scp target/*war ec2-user@192.168.108.145:/opt/tomcat9/webapps/uat.war"
   //sh "scp -o StrictHostKeyChecking=no  target/*war  ec2-user@192.168.108.145:/opt/tomcat9/webapps/uat.war"
   
  // sshagent(['']  ignoreMissing: true) {
   // sh "scp -o StrictHostKeyChecking=no target/*war  ec2-user@192.168.108.145:/opt/tomcat9/webapps/uat.war"
   
//}
//sh 'scp -o StrictHostKeyChecking=no target/*war ec2-user@192.168.108.145:/opt/tomcat9/webapps/'
sh 'echo Deploy to UAT'
} 
stage ('7 email'){
emailext body: '''hi Guild 

Status''', subject: 'project status', to: 'tolu2618@gmail.com'
   
}
}
